name: Deploy AS3

on:
  push:
    paths:
    - "declarations/**"
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install f5-cli
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        

    - name: Read BIGIP Host Data
      id: bigip_host
      run: | 
        echo ::set-output name=bigip_host::$(cat ./config/bigip.cfg | jq '.bigip[0] .host')
        echo ::set-output name=bigip_secret::$(cat ./config/bigip.cfg | jq '.bigip[0] .secret')
      
    - name: Display BIGIP Host
      run: echo "BIGIP host is :/ ${{ steps.bigip_host.outputs.bigip_host }}"
        
    - name: F5 CLI Login
      id: login
      env: 
        SECRET_NAME: ${{ steps.bigip_host.outputs.bigip_secret }}
      run: |
        f5 config set-defaults --disable-ssl-warnings true --auto-approve
        f5 login --authentication-provider bigip --host ${{ steps.bigip_host.outputs.bigip_host }} --user admin --password ${{ secrets.bigip_password }}
 
    - name: Check AS3 Installed
      id: verify
      run: echo ::set-output name=verify_output::$(f5 bigip extension as3 verify 2>&1)

    - name: just echo the output
      id: echo
      run: echo "THIS IS THE OUTPUT" = ${{ steps.verify.outputs.verify_output }} 

    - name: Check #2
      id: check
      run: echo ::set-output name=verify_output_2::$(f5 bigip extension as3 verify)

    - name: set output variables
      id: set_outputs
      run: |
        echo ::set-output name=as3_installed::$(cat ${{ steps.verify.outputs.verify_output }} | jq '.installed' )
        echo ::set-output name=as3_current::$(cat ${{ steps.verify.outputs.verify_output }} | jq '.installed' )
        echo ::set-output name=as3_latest::$(cat ${{ steps.verify.outputs.verify_output }} | jq '.installed' )

    - name: Evaluate verify results
      id: check_as3_installed
      if: steps.set_outputs.output.as3_installed == false
      run: echo "as3 not installed"

    - name: upgrade if needed
      id: upgrade_as3
      if: steps.set_outputs.outputs.as3_current < steps.set_outputs.outputs.as3_latest
      run: echo 'installed as3 version older than latest version'    
    
    - name: get list of changed files
      id: files
      uses: jitterbit/get-changed-files@v1
      
    - name: echo the list of changed files
      run: echo "This is the list of changed files = ${{ steps.files.output.all }}"
      
    - name: deploy as3 declaration
      id: deploy_as3
      if: steps.verify.outputs.verify_results
      run: |
        for changed_file in ${{ steps.files.outputs.all }}; do
          echo "name of chnaged file = ${changed_file}"
          echo ::set-env name=deploy_results::$(f5 bigip extension as3 create --declaration ${changed_file} 2>&1 | jq '.results[0] .code')
          echo "F5 AS3 declaration deploy result #1 = $deploy_results"
          echo "F5 AS3 declaration deploy result #2 = ${{ steps.deploy_as3.outputs.deploy_results }}"          
        done
    
    - name: show f5 as3 deploy result
      run: echo "F5 AS3 declaration deploy result = ${{ steps.deploy_as3.outputs.deploy_results }}"
